function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import { StyleSheet, View } from 'react-native';
/**
 * This is the default handle bar component used when no custom handle bar component is provided
 */
const DefaultHandleBar = _ref => {
  let {
    style,
    ...otherProps
  } = _ref;
  return /*#__PURE__*/React.createElement(View, _extends({
    style: materialStyles.dragHandleContainer
  }, otherProps), /*#__PURE__*/React.createElement(View, {
    style: [materialStyles.dragHandle, style]
  }));
};
const materialStyles = StyleSheet.create({
  dragHandleContainer: {
    padding: 18,
    width: 50,
    alignSelf: 'center'
  },
  dragHandle: {
    height: 4,
    width: 32,
    backgroundColor: '#49454F',
    opacity: 0.4,
    alignSelf: 'center',
    borderRadius: 50
  }
});

// this will be used in `convertHeight` for clamping sheet height
export const DEFAULT_HANDLE_BAR_DEFAULT_HEIGHT = 25; // paddingTop (10) + paddingBottom (10) + height (5)

export default DefaultHandleBar;
//# sourceMappingURL=index.js.map