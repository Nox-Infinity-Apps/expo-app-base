"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/**
 * Polymorphic and re-usable animated backdrop mask component
 */
const _AnimatedTouchableBackdropMask = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);
const AnimatedTouchableBackdropMask = _ref => {
  let {
    style,
    isPressable,
    pressHandler,
    android_touchRippleColor,
    ...otherProps
  } = _ref;
  return isPressable ? /*#__PURE__*/_react.default.createElement(_AnimatedTouchableBackdropMask, _extends({
    style: [style, styles.sharedBackdropStyle],
    android_ripple: android_touchRippleColor ? {
      borderless: true,
      color: android_touchRippleColor,
      foreground: true
    } : undefined,
    onPress: pressHandler
  }, otherProps)) :
  /*#__PURE__*/
  // @ts-expect-error
  _react.default.createElement(_reactNative.Animated.View, _extends({
    style: [style, styles.sharedBackdropStyle]
  }, otherProps));
};
const styles = _reactNative.StyleSheet.create({
  sharedBackdropStyle: _reactNative.StyleSheet.absoluteFillObject
});
var _default = exports.default = AnimatedTouchableBackdropMask;
//# sourceMappingURL=index.js.map